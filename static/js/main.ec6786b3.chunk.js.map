{"version":3,"sources":["useValuesFromGoogleSheets.js","App.js","ExchangeInfo.js","reportWebVitals.js","index.js","CollectorFields.js"],"names":["gapi","global","loadP","libraries","Promise","resolve","reject","load","callback","onerror","initializeSheetsApi","memoize","a","client","init","apiKey","discoveryDocs","scopes","useValuesFromGoogleSheets","onChangeLackingFieldValue","onChangeRedundantFieldValue","spreadsheetId","useEffect","sheets","spreadsheets","get","includeGridData","spreadsheet","result","lackingSheet","lackingValues","compact","data","rowData","map","row","values","effectiveValue","numberValue","sort","x","y","join","redundantSheet","redundantValues","Array","fill","flat","catch","window","error","queryStringParams","URLSearchParams","location","search","spreadsheetId1","spreadsheetId2","useCardSetData","useState","fieldValue","onChangeFieldValue","cardArray","useMemo","match","b","useCollectorFieldsData","lackingFieldValue","lackingArray","redundantFieldValue","redundantArray","lackingCardSet","Set","redundantCardCounts","orderBy","Object","entries","groupBy","length","useExchangeInfo","collector1Data","collector2Data","possibleCards1to2","filter","card","has","possibleCards2to1","exchangeCount","Math","min","cards1to2","slice","cards2to1","App","collectorFieldsData1","collectorFieldsData2","exchangeInfo","possibleTransfersIn","transfersIn","possibleTransfersOut","transfersOut","ExchangeInfo","i","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","CollectorFields","value","onChange","e","target","cardNumber","index","classnames","transfer","includes","possibleTransfer","indexOf"],"mappings":"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","file":"static/js/main.ec6786b3.chunk.js","sourcesContent":["import compact from 'lodash.compact';\r\nimport memoize from 'lodash.memoize';\r\nimport { useEffect } from 'react';\r\n\r\nconst API_KEY = 'AIzaSyCULqTDCVfoWs8DCOOngNZLtvKbEj2QtMg';\r\nconst gapi = global.gapi;\r\n\r\nconst loadP = (libraries) => new Promise((resolve, reject) => { gapi.load(libraries, { callback: resolve, onerror: reject }) });\r\n\r\nconst initializeSheetsApi = memoize(async () => {\r\n  await loadP('client');\r\n  await gapi.client.init({\r\n    apiKey: API_KEY,\r\n    discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\r\n    scopes: \"https://www.googleapis.com/auth/spreadsheets.readonly\",\r\n  });\r\n});\r\n\r\nconst useValuesFromGoogleSheets = ({ onChangeLackingFieldValue, onChangeRedundantFieldValue, spreadsheetId }) => {\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!spreadsheetId) {\r\n        return;\r\n      }\r\n\r\n      await initializeSheetsApi();\r\n      const { result: spreadsheet } = await gapi.client.sheets.spreadsheets.get({\r\n        spreadsheetId,\r\n        includeGridData: true,\r\n      });\r\n      const lackingSheet = spreadsheet.sheets[0];\r\n      const lackingValues = compact(lackingSheet.data[0].rowData.map(row => row.values[0]?.effectiveValue?.numberValue)).sort((x, y) => x - y);\r\n      onChangeLackingFieldValue(lackingValues.join(', '));\r\n      const redundantSheet = spreadsheet.sheets[1];\r\n      const redundantValues = compact(redundantSheet.data[0].rowData.map(row => Array(row.values[1]?.effectiveValue?.numberValue ?? 1).fill(row.values[0]?.effectiveValue?.numberValue))).flat().sort((x, y) => x - y);\r\n      onChangeRedundantFieldValue(redundantValues.join(', '));\r\n    })().catch(window.error);\r\n  }, [spreadsheetId, onChangeLackingFieldValue, onChangeRedundantFieldValue]);\r\n}\r\n\r\nexport default useValuesFromGoogleSheets;\r\n","import { useState, useMemo } from 'react';\nimport { groupBy, orderBy } from 'lodash';\nimport CollectorFields from './CollectorFields';\nimport ExchangeInfo from './ExchangeInfo';\nimport useValuesFromGoogleSheets from './useValuesFromGoogleSheets';\nimport './App.css';\n\nconst queryStringParams = new URLSearchParams(global.location.search);\nconst spreadsheetId1 = queryStringParams.get('googleSheet1');\nconst spreadsheetId2 = queryStringParams.get('googleSheet2');\n\nconst App = () => {\n  const collectorFieldsData1 = useCollectorFieldsData();\n  const collectorFieldsData2 = useCollectorFieldsData();\n  const exchangeInfo = useExchangeInfo(collectorFieldsData1, collectorFieldsData2);\n  useValuesFromGoogleSheets({ ...collectorFieldsData1, spreadsheetId: spreadsheetId1 });\n  useValuesFromGoogleSheets({ ...collectorFieldsData2, spreadsheetId: spreadsheetId2 });\n\n  return (\n    <>\n      <CollectorFields {...collectorFieldsData1} possibleTransfersIn={exchangeInfo.possibleCards2to1} transfersIn={exchangeInfo.cards2to1} possibleTransfersOut={exchangeInfo.possibleCards1to2} transfersOut={exchangeInfo.cards1to2} />\n      <CollectorFields {...collectorFieldsData2} possibleTransfersIn={exchangeInfo.possibleCards1to2} transfersIn={exchangeInfo.cards1to2} possibleTransfersOut={exchangeInfo.possibleCards2to1} transfersOut={exchangeInfo.cards2to1} />\n      <ExchangeInfo {...exchangeInfo} />\n    </>\n  );\n};\n\nconst useCardSetData = () => {\n  const [fieldValue, onChangeFieldValue] = useState();\n  const cardArray = useMemo(() => (fieldValue ?? '').match(/\\d+/g)?.map(match => match).sort((a, b) => a - b), [fieldValue]);\n  return [fieldValue, onChangeFieldValue, cardArray];\n};\n\nconst useCollectorFieldsData = () => {\n  const [lackingFieldValue, onChangeLackingFieldValue, lackingArray] = useCardSetData();\n  const [redundantFieldValue, onChangeRedundantFieldValue, redundantArray] = useCardSetData();\n  const lackingCardSet = new Set(lackingArray);\n  const redundantCardCounts = orderBy(Object.entries(groupBy(redundantArray)).map(([card, group]) => [card, group.length]), ([_, count]) => count, 'desc');\n\n  return { lackingFieldValue, onChangeLackingFieldValue, lackingArray, lackingCardSet, redundantFieldValue, onChangeRedundantFieldValue, redundantArray, redundantCardCounts };\n};\n\nconst useExchangeInfo = (collector1Data, collector2Data) => {\n  const possibleCards1to2 = collector1Data.redundantCardCounts.filter(([card]) => collector2Data.lackingCardSet.has(card)).map(([card]) => card);\n  const possibleCards2to1 = collector2Data.redundantCardCounts.filter(([card]) => collector1Data.lackingCardSet.has(card)).map(([card]) => card);\n  const exchangeCount = Math.min(possibleCards1to2.length, possibleCards2to1.length);\n  return {\n    possibleCards1to2,\n    possibleCards2to1,\n    cards1to2: possibleCards1to2.slice(0, exchangeCount),\n    cards2to1: possibleCards2to1.slice(0, exchangeCount),\n  };\n};\n\nexport default App;\n","const ExchangeInfo = ({ cards1to2, cards2to1 }) => (\r\n  <>\r\n    <label>\r\n      <span>Plaatjes van verzamelaar 1 naar verzamelaar 2: </span>\r\n      <ul>\r\n      {\r\n        cards1to2?.map(i => <li className=\"transfer\" key={i}>{i}</li>)\r\n      }\r\n    </ul>\r\n    </label>\r\n    <label>\r\n      <span>Plaatjes van verzamelaar 2 naar verzamelaar 1: </span>\r\n      <ul>\r\n      {\r\n        cards2to1?.map(i => <li className=\"transfer\" key={i}>{i}</li>)\r\n      }\r\n    </ul>\r\n    </label>\r\n  </>\r\n)\r\n\r\nexport default ExchangeInfo;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import classnames from 'classnames';\r\nimport './CollectorFields.css';\r\n\r\nconst CollectorFields = ({\r\n  lackingFieldValue,\r\n  onChangeLackingFieldValue,\r\n  lackingArray,\r\n  redundantFieldValue,\r\n  onChangeRedundantFieldValue,\r\n  redundantArray,\r\n  possibleTransfersIn,\r\n  transfersIn,\r\n  possibleTransfersOut,\r\n  transfersOut,\r\n}) => (\r\n  <>\r\n    <label>\r\n      <div>Ontbrekende plaatjes: </div>\r\n      <textarea value={lackingFieldValue || ''} onChange={e => onChangeLackingFieldValue(e.target.value)} />\r\n    </label>\r\n    <ul>\r\n      {\r\n        lackingArray?.map((cardNumber, index) => <li className={classnames({ transfer: transfersIn.includes(cardNumber), possibleTransfer: possibleTransfersIn.includes(cardNumber) })}  key={index}>{cardNumber}</li>)\r\n      }\r\n    </ul>\r\n\r\n    <label>\r\n      <div>Dubbele plaatjes: </div>\r\n      <textarea value={redundantFieldValue || ''} onChange={e => onChangeRedundantFieldValue(e.target.value)} />\r\n    </label>\r\n    <ul>\r\n      {\r\n        redundantArray?.map((cardNumber, index) => <li className={classnames({ transfer: transfersOut.includes(cardNumber) && redundantArray.indexOf(cardNumber) === index, possibleTransfer: possibleTransfersOut.includes(cardNumber) })} key={index}>{cardNumber}</li>)\r\n      }\r\n    </ul>\r\n  </>\r\n);\r\n\r\nexport default CollectorFields;\r\n"],"sourceRoot":""}